// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique
  profileImage String
  createdAt    DateTime?     @default(now())
  updatedAt    DateTime?     @updatedAt
  openapiFile  OpenApiFile[]
}

model OpenApiFile {
  id       String   @id @default(uuid())
  name     String
  url      String   @unique // key value in s3 bucket
  email    String?
  User     User?    @relation(fields: [email], references: [email])
  progress Progress @default(QUEUE)
  report   String?

  totalEndpoint  Int     @default(0)
  openapiVersion String?
  title          String?
  description    String?
  servers        Json[]

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt
  apiPath   ApiPath[]
}

model ApiPath {
  id           String  @id @default(uuid())
  path         String
  method       String
  summary      String?
  description  String?
  parameters   Json[]
  requestBody  String?
  responseBody Json[]
  securityBody Json[]

  OpenApiFile   OpenApiFile? @relation(fields: [openApiFileId], references: [id])
  openApiFileId String?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt

  status     String       @default("TESTING")
  testResult TestResult[]
}

model TestResult {
  id String @id @default(uuid())

  alert       String?
  attack      String?
  confidence  String?
  risk        String?
  description String?
  evidence    String?
  method      String?
  name        String?
  other       String?
  param       String?
  reference   String?
  solution    String?
  tags        Json?

  apiPathId String
  ApiPath   ApiPath @relation(fields: [apiPathId], references: [id])
}

enum Progress {
  QUEUE
  START
  PARSING
  TESTING
  FINISH
}
